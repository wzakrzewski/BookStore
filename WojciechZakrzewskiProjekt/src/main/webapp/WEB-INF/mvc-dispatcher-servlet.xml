<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:sec="http://www.springframework.org/schema/security"

	   xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd"
>
	<!-- twoja paczka z beanmi -->
	<context:component-scan base-package="ovh.wzakrzewski.bookstore"/>
	<!-- adnotacje -->
	<sec:global-method-security pre-post-annotations="enabled"/>
	<mvc:annotation-driven/>
	<!-- MVC view resolver -->
	<bean
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://db4free.net:3306/"/>
		<property name="user" value="" />
		<property name="password" value="" />
		<!-- these are connection pool properties for C3P0 -->
		<property name="minPoolSize" value="2"/>
		<property name="maxPoolSize" value="10"/>
		<property name="maxIdleTime" value="20000"/>
	</bean>
	<!-- Hibernate session factory //+znane nam wstrzykiwanie zaleznosci w beanow -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"/>
		<property name="packagesToScan" value="ovh.wzakrzewski.bookstore.entity"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<!--Hibernate transaction manager -->
	<bean id="myTransactionManager"
		  class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="bcrypt" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<tx:annotation-driven transaction-manager="myTransactionManager"/>
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	<mvc:view-controller path="/" view-name="index"/>
	<mvc:view-controller path="/login"/>
	<mvc:view-controller path="/logout"/>

	<sec:http>
		<sec:intercept-url pattern="/" access="isAuthenticated()" />
		<sec:intercept-url pattern="/adminregister" access="hasIpAddress('127.0.0.1') or hasIpAddress('::1')"/>


		<sec:intercept-url pattern="/register" access="permitAll()"/>
		<sec:intercept-url pattern="/hello" access="permitAll()"/>
		<sec:intercept-url pattern="/login" access="isAnonymous()"/>
		<sec:intercept-url pattern="/logout" access="isAuthenticated()"/>
		<sec:intercept-url pattern="/books/user" access="hasAuthority('ROLE_USER')"/>
		<sec:intercept-url pattern="/books/list" access="permitAll()"/>
		<sec:intercept-url pattern="/authors/list" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/authors/list/updateAuthor" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/authors/list/deleteAuthor" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/categories/list" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/categories/list/updateCategory" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/categories/list/deleteCategory" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/cart" access="hasRole('USER')"/>
		<sec:intercept-url pattern="/cart/add" access="hasRole('USER')"/>
		<sec:intercept-url pattern="/cart/delete" access="hasRole('USER')"/>
		<sec:intercept-url pattern="/books/admin" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/orders" access="hasAuthority('ROLE_USER')"/>
		<sec:intercept-url pattern="/allorders" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/orders/complete" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/books/saveBook" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/books/deleteBook" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/books/updateBookForm" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/books/updateBook" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/books/formadd" access="hasAuthority('ROLE_ADMIN')"/>
		<!--<sec:intercept-url pattern="/restbooks/restlist" access="hasAuthority('ROLE_ADMIN')"/>-->
		<sec:intercept-url pattern="/restbooks/restlist" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:intercept-url pattern="/restdeleteBookForm" access="permitAll()"/>
		<sec:intercept-url pattern="/restsaveBook" access="hasAuthority('ROLE_ADMIN')"/>
		<!-- <sec:intercept-url pattern="/books/admin" access="hasRole('ROLE_ADMIN')"/> -->
		<sec:intercept-url pattern="/**" access="hasAuthority('ROLE_ADMIN')"/>
		<sec:form-login login-page="/login"/>
		<sec:logout logout-success-url="/"/>
		<sec:csrf disabled="true"/>
	</sec:http>
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:password-encoder ref="bcrypt"/>
			<sec:jdbc-user-service data-source-ref="myDataSource"/>
		</sec:authentication-provider>
	</sec:authentication-manager>
</beans>